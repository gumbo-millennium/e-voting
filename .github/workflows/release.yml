name: "Build and push Docker image"

on:
  releases:
    - created

env:
  RELEASE_TAG: ${{ github.event.release.tag_name }}
  RELEASE_HASH: ${{ github.sha }}
  PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
  SERVICE: evoting
  GCR_REGION: eu

jobs:
  build-frontend:
    name: "Build application front-end"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node dependencies
        run: npm clean-install

      - name: Build Front-end
        run: npm run-script build

      - name: Publish front-end
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            path/output/bin/
            path/output/test-results
            !path/**/*.tmp

  build-github-image:
    name: "Build Docker image for GitHub"
    runs-on: ubuntu-latest
    needs:
      - build-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: front-end
          path: path/to/artifact

      - name: Build image for GitHub
        run: |
          docker build \
            --tag docker.pkg.github.com/gumbo-millennium/e-voting/app:${RELEASE_HASH} \
            --tag docker.pkg.github.com/gumbo-millennium/e-voting/app:${RELEASE_TAG} \
            --tag docker.pkg.github.com/gumbo-millennium/e-voting/app:latest \
            --progress plain \
            --file .cloud/Dockerfile \
            --target main \
            .

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push newly created tag
        run: |
          docker push docker.pkg.github.com/gumbo-millennium/e-voting/app:${RELEASE_HASH}
          docker push docker.pkg.github.com/gumbo-millennium/e-voting/app:${RELEASE_TAG}
          docker push docker.pkg.github.com/gumbo-millennium/e-voting/app:latest

  build-gcr-image:
    name: "Build Docker image for Google Container Registry"
    runs-on: ubuntu-latest
    needs:
      - build-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: front-end
          path: path/to/artifact

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build Google Cloud Run image
        run: |
          docker build \
            --tag ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:${RELEASE_HASH} \
            --tag ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:${RELEASE_TAG} \
            --tag ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:latest \
            --progress plain \
            --file .cloud/Dockerfile \
            --target main \
            .

      - name: Push image to Google Container Registry
        run: |
          docker push ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:${RELEASE_HASH}
          docker push ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:${RELEASE_TAG}
          docker push ${GCR_REGION}.gcr.io/${PROJECT_ID}/${SERVICE}:latest
