name: Deploy application

on:
  workflow_call:
    inputs:
      version:
        description: Version to deploy
        required: true
        type: string

    secrets:
      # Google Cloud Platform secrets
      GOOGLE_PROJECT_ID:
        required: true
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true

      # Terraform secrets
      TERRAFORM_CLI_TOKEN:
        required: true

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

jobs:
  deploy:
    name: Deploy using Terraform
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://e-voting.gumbo-millennium.nl/

    env:
      TF_VAR_project: ${{ secrets.GOOGLE_PROJECT_ID }}
      TF_VAR_container_name: evoting
      TF_VAR_container_version:  ${{ inputs.version }}
      TF_VAR_container_region: eu
      TF_VAR_app_prefix: vote2021-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Register Google Application Credentials in env
        run: echo "TF_VAR_credentials_file=${GOOGLE_APPLICATION_CREDENTIALS}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLI_TOKEN }}

      - name: Validate Terraform formatting
        run: terraform -chdir=.cloud/terraform fmt -check

      - name: Initialize Terraform
        run: terraform -chdir=.cloud/terraform init -input=false

      - name: Validate Terraform configuration
        run: terraform -chdir=.cloud/terraform validate

      - name: Setup secrets on Google Cloud
        run: .github/bin/create-secrets.sh

      - name: Refresh Terraform deployment information
        run: terraform -chdir=.cloud/terraform refresh

      - name: Plan Terraform deployment
        run: terraform -chdir=.cloud/terraform plan -out ./terraform.tfplan > /dev/null

      - name: Apply Terraform deployment
        run: terraform -chdir=.cloud/terraform apply ./terraform.tfplan
